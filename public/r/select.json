{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "title": "Select",
  "description": "A customizable select dropdown component.",
  "dependencies": [
    "@radix-ui/react-select",
    "@remixicon/react",
    "tailwind-variants"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/default/select/select.tsx",
      "content": "// Custom Select [v0.0.0]\n\nimport * as SelectPrimitives from \"@radix-ui/react-select\"\nimport { RiArrowDownSLine, RiArrowUpSLine, RiCheckLine } from \"@remixicon/react\"\nimport { format } from \"date-fns\"\nimport React from \"react\"\n\nimport { cx, focusInput, hasErrorInput } from \"@/registry/default/utils/utils\"\nimport { DateRange } from \"react-day-picker\"\n\nconst Select = SelectPrimitives.Root\nSelect.displayName = \"Select\"\n\nconst SelectGroup = SelectPrimitives.Group\nSelectGroup.displayName = \"SelectGroup\"\n\nconst SelectValue = SelectPrimitives.Value\nSelectValue.displayName = \"SelectValue\"\n\nconst selectTriggerStyles = [\n  cx(\n    // base\n    \"group/trigger flex w-full select-none items-center justify-between gap-2 truncate rounded-md border px-3 py-2 shadow-sm outline-none transition sm:text-sm\",\n    // border color\n    \"border-gray-300 dark:border-gray-800\",\n    // text color\n    \"text-gray-900 dark:text-gray-50\",\n    // placeholder\n    \"data-[placeholder]:text-gray-500 data-[placeholder]:dark:text-gray-500\",\n    // background color\n    \"bg-white dark:bg-gray-950\",    // hover\n    \"hover:bg-gray-50 hover:dark:bg-gray-950/50\",\n    // disabled\n    \"data-[disabled]:bg-gray-100 data-[disabled]:text-gray-400\",\n    \"data-[disabled]:dark:border-gray-700 data-[disabled]:dark:bg-gray-800 data-[disabled]:dark:text-gray-500\",\n    focusInput,\n    // invalid (optional)\n    // \"aria-[invalid=true]:dark:ring-red-400/20 aria-[invalid=true]:ring-2 aria-[invalid=true]:ring-red-200 aria-[invalid=true]:border-red-500 invalid:ring-2 invalid:ring-red-200 invalid:border-red-500\"\n  ),\n]\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.Trigger> & {\n    hasError?: boolean\n  }\n>(({ className, hasError, children, ...props }, forwardedRef) => {\n  return (\n    <SelectPrimitives.Trigger\n      ref={forwardedRef}\n      className={cx(\n        selectTriggerStyles,\n        hasError ? hasErrorInput : \"\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"truncate\">{children}</span>\n      <SelectPrimitives.Icon asChild>\n        <RiArrowDownSLine\n          className={cx(\n            // base\n            \"-mr-1 size-5 shrink-0\",\n            // text color\n            \"text-gray-400 dark:text-gray-600\",            // disabled\n            \"group-data-[disabled]/trigger:text-gray-300 group-data-[disabled]/trigger:dark:text-gray-600\",\n          )}\n        />\n      </SelectPrimitives.Icon>\n    </SelectPrimitives.Trigger>\n  )\n})\n\nSelectTrigger.displayName = \"SelectTrigger\"\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.ScrollUpButton>\n>(({ className, ...props }, forwardedRef) => (\n  <SelectPrimitives.ScrollUpButton\n    ref={forwardedRef}\n    className={cx(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <RiArrowUpSLine className=\"size-3 shrink-0\" aria-hidden=\"true\" />\n  </SelectPrimitives.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitives.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.ScrollDownButton>\n>(({ className, ...props }, forwardedRef) => (\n  <SelectPrimitives.ScrollDownButton\n    ref={forwardedRef}\n    className={cx(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <RiArrowDownSLine className=\"size-3 shrink-0\" aria-hidden=\"true\" />\n  </SelectPrimitives.ScrollDownButton>\n))SelectScrollDownButton.displayName =\n  SelectPrimitives.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.Content>\n>(\n  (\n    {\n      className,\n      position = \"popper\",\n      children,\n      sideOffset = 8,\n      collisionPadding = 10,\n      ...props\n    },\n    forwardedRef,\n  ) => (\n    <SelectPrimitives.Portal>\n      <SelectPrimitives.Content\n        ref={forwardedRef}\n        className={cx(\n          // base\n          \"relative z-50 overflow-hidden rounded-md border shadow-xl shadow-black/[2.5%]\",\n          // widths\n          \"min-w-[calc(var(--radix-select-trigger-width)-2px)] max-w-[95vw]\",\n          // heights\n          \"max-h-[--radix-select-content-available-height]\",\n          // background color\n          \"bg-white dark:bg-gray-950\",\n          // text color\n          \"text-gray-900 dark:text-gray-50\",\n          // border color\n          \"border-gray-200 dark:border-gray-800\",\n          // transition\n          \"will-change-[transform,opacity]\",          // \"data-[state=open]:animate-slideDownAndFade\",\n          \"data-[state=closed]:animate-hide\",\n          \"data-[side=bottom]:animate-slideDownAndFade data-[side=left]:animate-slideLeftAndFade data-[side=right]:animate-slideRightAndFade data-[side=top]:animate-slideUpAndFade\",\n          className,\n        )}\n        sideOffset={sideOffset}\n        position={position}\n        collisionPadding={collisionPadding}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitives.Viewport\n          className={cx(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[calc(var(--radix-select-trigger-width))]\",\n          )}\n        >\n          {children}\n        </SelectPrimitives.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitives.Content>\n    </SelectPrimitives.Portal>\n  ),\n)\n\nSelectContent.displayName = \"SelectContent\"\n\nconst SelectGroupLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.Label>\n>(({ className, ...props }, forwardedRef) => (\n  <SelectPrimitives.Label\n    ref={forwardedRef}\n    className={cx(\n      // base\n      \"px-3 py-2 text-xs font-medium tracking-wide\",      // text color\n      \"text-gray-500 dark:text-gray-500\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nSelectGroupLabel.displayName = \"SelectGroupLabel\"\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.Item>\n>(({ className, children, ...props }, forwardedRef) => {\n  return (\n    <SelectPrimitives.Item\n      ref={forwardedRef}\n      className={cx(\n        // base\n        \"grid cursor-pointer grid-cols-[1fr_20px] gap-x-2 rounded px-3 py-2 outline-none transition-colors data-[state=checked]:font-semibold sm:text-sm\",\n        // text color\n        \"text-gray-900 dark:text-gray-50\",\n        // disabled\n        \"data-[disabled]:pointer-events-none data-[disabled]:text-gray-400 data-[disabled]:hover:bg-none dark:data-[disabled]:text-gray-600\",\n        // focus\n        \"focus-visible:bg-gray-100 focus-visible:dark:bg-gray-900\",\n        // hover\n        \"hover:bg-gray-100 hover:dark:bg-gray-900\",\n        className,\n      )}\n      {...props}\n    >\n      <SelectPrimitives.ItemText className=\"flex-1 truncate\">\n        {children}\n      </SelectPrimitives.ItemText>\n      <SelectPrimitives.ItemIndicator>\n        <RiCheckLine\n          className=\"size-5 shrink-0 text-gray-800 dark:text-gray-200\"\n          aria-hidden=\"true\"\n        />\n      </SelectPrimitives.ItemIndicator>\n    </SelectPrimitives.Item>\n  )\n})\nSelectItem.displayName = \"SelectItem\"\n\nconst SelectItemPeriod = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.Item> & {\n    period?: DateRange | undefined\n  }\n>(({ className, children, period, ...props }, forwardedRef) => {\n  return (\n    <SelectPrimitives.Item\n      ref={forwardedRef}\n      className={cx(\n        // base\n        \"relative flex cursor-pointer items-center rounded py-2 pl-8 pr-3 outline-none transition-colors data-[state=checked]:font-semibold sm:text-sm\",\n        // text color\n        \"text-gray-900 dark:text-gray-50\",\n        // disabled\n        \"data-[disabled]:pointer-events-none data-[disabled]:text-gray-400 data-[disabled]:hover:bg-none dark:data-[disabled]:text-gray-600\",\n        // focus\n        \"focus-visible:bg-gray-100 focus-visible:dark:bg-gray-900\",\n        // hover\n        \"hover:bg-gray-100 hover:dark:bg-gray-900\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <SelectPrimitives.ItemIndicator>\n          <RiCheckLine\n            className=\"size-5 shrink-0 text-gray-800 dark:text-gray-200\"\n            aria-hidden=\"true\"\n          />\n        </SelectPrimitives.ItemIndicator>\n      </span>\n      <div className=\"flex w-full items-center\">        {/* adapt width accordingly if you use longer names for periods */}\n        <span className=\"w-40 sm:w-32\">\n          <SelectPrimitives.ItemText>{children}</SelectPrimitives.ItemText>\n        </span>\n        <span>\n          {period?.from && period?.to && (\n            <span className=\"whitespace-nowrap font-normal text-gray-400\">\n              {format(period.from, \"MMM d, yyyy\")} –{\" \"}\n              {format(period.to, \"MMM d, yyyy\")}\n            </span>\n          )}\n        </span>\n      </div>\n    </SelectPrimitives.Item>\n  )\n})\n\nSelectItemPeriod.displayName = \"SelectItemPeriod\"\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitives.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitives.Separator>\n>(({ className, ...props }, forwardedRef) => (\n  <SelectPrimitives.Separator\n    ref={forwardedRef}\n    className={cx(\n      // base\n      \"-mx-1 my-1 h-px\",\n      // background color\n      \"bg-gray-300 dark:bg-gray-700\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nSelectSeparator.displayName = \"SelectSeparator\"\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectGroupLabel,\n  SelectItem,\n  SelectItemPeriod,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}",
      "type": "registry:component"
    }
  ]
}