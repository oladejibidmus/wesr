{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:ui",
  "title": "Checkbox",
  "description": "A checkbox component with custom styling.",
  "dependencies": [
    "@radix-ui/react-checkbox",
    "@remixicon/react",
    "tailwind-variants"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/default/checkbox/checkbox.tsx",
      "content": "// Tremor Raw Checkbox [v0.0.2]\n\nimport * as CheckboxPrimitives from \"@radix-ui/react-checkbox\"\nimport React from \"react\"\n\nimport { cx, focusRing } from \"@/registry/default/utils/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitives.Root>\n>(({ className, checked, ...props }, forwardedRef) => {\n  return (\n    <CheckboxPrimitives.Root\n      ref={forwardedRef}\n      {...props}\n      checked={checked}\n      className={cx(\n        // base\n        \"relative inline-flex size-4 shrink-0 appearance-none items-center justify-center rounded shadow-sm outline-none ring-1 ring-inset transition duration-100 enabled:cursor-pointer\",\n        // text color\n        \"text-white dark:text-gray-50\",\n        // background color\n        \"bg-white dark:bg-gray-950\",\n        // ring color\n        \"ring-gray-300 dark:ring-gray-800\",\n        // disabled\n        \"data-[disabled]:bg-gray-100 data-[disabled]:text-gray-400 data-[disabled]:ring-gray-300\",\n        \"data-[disabled]:dark:bg-gray-800 data-[disabled]:dark:text-gray-500 data-[disabled]:dark:ring-gray-700\",\n        // checked and enabled\n        \"enabled:data-[state=checked]:bg-indigo-600 enabled:data-[state=checked]:ring-0 enabled:data-[state=checked]:ring-transparent\",\n        // indeterminate\n        \"enabled:data-[state=indeterminate]:bg-indigo-600 enabled:data-[state=indeterminate]:ring-0 enabled:data-[state=indeterminate]:ring-transparent\",\n        // focus\n        focusRing,\n        className,\n      )}\n    >      <CheckboxPrimitives.Indicator\n        asChild\n        className=\"flex size-full items-center justify-center\"\n      >\n        {checked === \"indeterminate\" ? (\n          <svg\n            aria-hidden=\"true\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <line\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeWidth=\"2\"\n              x1=\"4\"\n              x2=\"12\"\n              y1=\"8\"\n              y2=\"8\"\n            ></line>\n          </svg>\n        ) : (\n          <svg\n            aria-hidden=\"true\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M11.2 5.59998L6.79999 9.99998L4.79999 7.99998\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n            ></path>\n          </svg>\n        )}\n      </CheckboxPrimitives.Indicator>\n    </CheckboxPrimitives.Root>\n  )\n})\n\nCheckbox.displayName = \"Checkbox\"\n\nexport { Checkbox }",
      "type": "registry:component"
    }
  ]
}